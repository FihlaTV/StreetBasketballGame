{"version":3,"sources":["physics/meshes/ropeMesh.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEa,Q,WAAA,Q;;;AACX,oBAAY,QAAZ,EAAsB,QAAtB,EAA6C;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAC3C,QAAM,aAAa,OAAO,OAA1B;;AAEA,QAAM,OAAO,WAAW,IAAX,IAAmB,OAAO,IAAvC;;AAH2C,0GAIrC,QAJqC,EAI3B,QAJ2B,EAIjB,IAJiB;;AAM3C,UAAK,QAAL,CAAc,IAAd,GAAqB,cAArB;;AAEA,QAAM,KAAK,OAAO,QAAP,CAAgB,KAAhB,CAAsB,QAAtB,CAA+B,CAA/B,CAAX;AACA,QAAM,KAAK,OAAO,QAAP,CAAgB,KAAhB,CAAsB,QAAtB,CAA+B,CAA/B,CAAX;;AAEA,UAAK,QAAL,CAAc,IAAd,GAAqB,CACnB,GAAG,CADgB,EACb,GAAG,CADU,EACP,GAAG,CADI,EAEnB,GAAG,CAFgB,EAEb,GAAG,CAFU,EAEP,GAAG,CAFI,EAGnB,OAAO,QAAP,CAAgB,MAHG,CAArB;;AAMA,UAAK,QAAL,CAAc,MAAd,GAAuB;AACrB,gBAAU,WAAW,QADA;AAErB,eAAS,WAAW,OAFC;AAGrB,cAAQ,WAAW,MAHE;AAIrB,YAAM,WAAW,IAJI;AAKrB,YAAM,WAAW,IALI;AAMrB,YAAM,WAAW,IANI;AAOrB,YAAM,WAAW,IAPI;AAQrB,YAAM,WAAW,IARI;AASrB,mBAAa,WAAW,WATH;AAUrB,mBAAa,WAAW,WAVH;AAWrB,mBAAa,WAAW,WAXH;AAYrB,mBAAa,WAAW,WAZH;AAarB,sBAAgB,WAAW,cAbN;AAcrB,qBAAe,WAAW;AAdL,KAAvB;;AAiBA,UAAK,QAAL,CAAc,IAAd,GAAqB,IAArB;AAlC2C;AAmC5C;;;;iCAEY,K,EAAO,M,EAAQ,I,EAAM,S,EAAgD;AAAA,UAArC,4BAAqC,yDAAN,IAAM;;AAChF,UAAM,KAAK,KAAK,QAAL,CAAc,EAAzB;AACA,UAAM,KAAK,OAAO,QAAP,CAAgB,EAA3B;;AAEA,YAAM,OAAN,CAAc,cAAd,EAA8B;AAC5B,aAAK,EADuB;AAE5B,cAAM,EAFsB;AAG5B,kBAH4B;AAI5B,4BAJ4B;AAK5B;AAL4B,OAA9B;AAOD","file":"ropeMesh.js","sourcesContent":["import {Line} from '../core/line';\r\n\r\nexport class RopeMesh extends Line {\r\n  constructor(geometry, material, params = {}) {\r\n    const physParams = params.physics;\r\n\r\n    const mass = physParams.mass || params.mass;\r\n    super(geometry, material, mass);\r\n\r\n    this._physijs.type = 'softRopeMesh';\r\n\r\n    const v1 = params.geometry.curve.getPoint(0);\r\n    const v2 = params.geometry.curve.getPoint(1);\r\n\r\n    this._physijs.data = [\r\n      v1.x, v1.y, v1.z,\r\n      v2.x, v2.y, v2.z,\r\n      params.geometry.points\r\n    ];\r\n\r\n    this._physijs.params = {\r\n      friction: physParams.friction,\r\n      damping: physParams.damping,\r\n      margin: physParams.margin,\r\n      klst: physParams.klst,\r\n      kast: physParams.kast,\r\n      kvst: physParams.kvst,\r\n      drag: physParams.drag,\r\n      lift: physParams.lift,\r\n      piterations: physParams.piterations,\r\n      viterations: physParams.viterations,\r\n      diterations: physParams.diterations,\r\n      citerations: physParams.citerations,\r\n      anchorHardness: physParams.anchorHardness,\r\n      rigidHardness: physParams.rigidHardness,\r\n    };\r\n\r\n    this._physijs.mass = mass;\r\n  }\r\n\r\n  appendAnchor(world, object, node, influence, collisionBetweenLinkedBodies = true) {\r\n    const o1 = this._physijs.id;\r\n    const o2 = object._physijs.id;\r\n\r\n    world.execute('appendAnchor', {\r\n      obj: o1,\r\n      obj2: o2,\r\n      node,\r\n      influence,\r\n      collisionBetweenLinkedBodies\r\n    });\r\n  }\r\n}\r\n"]}